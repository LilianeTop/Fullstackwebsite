[{"/Users/lilianetop/Desktop/Fullstackwebsite/frontend/src/index.js":"1","/Users/lilianetop/Desktop/Fullstackwebsite/frontend/src/reportWebVitals.js":"2","/Users/lilianetop/Desktop/Fullstackwebsite/frontend/src/App.js":"3","/Users/lilianetop/Desktop/Fullstackwebsite/frontend/src/components/fixed/Footer.js":"4","/Users/lilianetop/Desktop/Fullstackwebsite/frontend/src/components/homepage/Home.js":"5","/Users/lilianetop/Desktop/Fullstackwebsite/frontend/src/components/fixed/NavBar.js":"6","/Users/lilianetop/Desktop/Fullstackwebsite/frontend/src/components/fixed/SearchBar.js":"7","/Users/lilianetop/Desktop/Fullstackwebsite/frontend/src/components/portfolio/Portfolio.js":"8","/Users/lilianetop/Desktop/Fullstackwebsite/frontend/src/components/admin/Admin.js":"9","/Users/lilianetop/Desktop/Fullstackwebsite/frontend/src/components/aboutEls/AboutEls.js":"10","/Users/lilianetop/Desktop/Fullstackwebsite/frontend/src/components/homepage/HomeCarousel.js":"11","/Users/lilianetop/Desktop/Fullstackwebsite/frontend/src/components/portfolio/Photo.js":"12","/Users/lilianetop/Desktop/Fullstackwebsite/frontend/src/components/aboutEls/Standpunt.js":"13","/Users/lilianetop/Desktop/Fullstackwebsite/frontend/src/components/portfolio/ThemaCarousel.js":"14","/Users/lilianetop/Desktop/Fullstackwebsite/frontend/src/components/homepage/ArtPiece.js":"15","/Users/lilianetop/Desktop/Fullstackwebsite/frontend/src/components/admin/RadioButtons.js":"16","/Users/lilianetop/Desktop/Fullstackwebsite/frontend/src/components/admin/PhotoFormType.js":"17","/Users/lilianetop/Desktop/Fullstackwebsite/frontend/src/components/admin/PhotoFormThemes.js":"18","/Users/lilianetop/Desktop/Fullstackwebsite/frontend/src/components/admin/PhotoFormColors.js":"19","/Users/lilianetop/Desktop/Fullstackwebsite/frontend/src/components/admin/PhotoFormImageURL.js":"20","/Users/lilianetop/Desktop/Fullstackwebsite/frontend/src/components/admin/PhotoFormDescription.js":"21","/Users/lilianetop/Desktop/Fullstackwebsite/frontend/src/components/homepage/List.js":"22","/Users/lilianetop/Desktop/Fullstackwebsite/frontend/src/components/admin/themeItems.js":"23","/Users/lilianetop/Desktop/Fullstackwebsite/frontend/src/components/homepage/ThemePhoto.js":"24","/Users/lilianetop/Desktop/Fullstackwebsite/frontend/src/components/admin/LoginScreen.js":"25","/Users/lilianetop/Desktop/Fullstackwebsite/frontend/src/components/blog/Blog.js":"26","/Users/lilianetop/Desktop/Fullstackwebsite/frontend/src/components/admin/Menu.js":"27","/Users/lilianetop/Desktop/Fullstackwebsite/frontend/src/components/admin/UploadPhoto.js":"28","/Users/lilianetop/Desktop/Fullstackwebsite/frontend/src/components/admin/DeletePhoto.js":"29","/Users/lilianetop/Desktop/Fullstackwebsite/frontend/src/components/admin/ChangePhoto.js":"30"},{"size":618,"mtime":1613897117805,"results":"31","hashOfConfig":"32"},{"size":362,"mtime":1613236588146,"results":"33","hashOfConfig":"32"},{"size":1046,"mtime":1614610294581,"results":"34","hashOfConfig":"32"},{"size":469,"mtime":1613118048713,"results":"35","hashOfConfig":"32"},{"size":243,"mtime":1614595852016,"results":"36","hashOfConfig":"32"},{"size":5911,"mtime":1613245529160,"results":"37","hashOfConfig":"32"},{"size":496,"mtime":1613118048716,"results":"38","hashOfConfig":"39"},{"size":229,"mtime":1613388642050,"results":"40","hashOfConfig":"32"},{"size":630,"mtime":1614847908040,"results":"41","hashOfConfig":"32"},{"size":209,"mtime":1613388642038,"results":"42","hashOfConfig":"32"},{"size":322,"mtime":1613669911121,"results":"43","hashOfConfig":"32"},{"size":379,"mtime":1614595852018,"results":"44","hashOfConfig":"32"},{"size":228,"mtime":1613118048717,"results":"45","hashOfConfig":"32"},{"size":1331,"mtime":1614595852020,"results":"46","hashOfConfig":"32"},{"size":716,"mtime":1613118048712,"results":"47","hashOfConfig":"32"},{"size":1138,"mtime":1613576267278,"results":"48","hashOfConfig":"39"},{"size":2604,"mtime":1613669911120,"results":"49","hashOfConfig":"39"},{"size":1450,"mtime":1613669911119,"results":"50","hashOfConfig":"39"},{"size":1380,"mtime":1613669911118,"results":"51","hashOfConfig":"39"},{"size":660,"mtime":1613669911119,"results":"52","hashOfConfig":"39"},{"size":917,"mtime":1613669911119,"results":"53","hashOfConfig":"39"},{"size":845,"mtime":1614595852016,"results":"54","hashOfConfig":"32"},{"size":762,"mtime":1614595852015,"results":"55","hashOfConfig":"32"},{"size":238,"mtime":1614595852018,"results":"56","hashOfConfig":"32"},{"size":2097,"mtime":1614847496550,"results":"57","hashOfConfig":"32"},{"size":292,"mtime":1614610294583,"results":"58","hashOfConfig":"32"},{"size":1703,"mtime":1614762628883,"results":"59","hashOfConfig":"32"},{"size":12431,"mtime":1614762628883,"results":"60","hashOfConfig":"32"},{"size":259,"mtime":1614618449001,"results":"61","hashOfConfig":"32"},{"size":259,"mtime":1614618449001,"results":"62","hashOfConfig":"32"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},"1t7udst",{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"1qpfi3f",{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"65"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"65"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"65"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"65"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"65"},"/Users/lilianetop/Desktop/Fullstackwebsite/frontend/src/index.js",[],["131","132"],"/Users/lilianetop/Desktop/Fullstackwebsite/frontend/src/reportWebVitals.js",[],"/Users/lilianetop/Desktop/Fullstackwebsite/frontend/src/App.js",[],"/Users/lilianetop/Desktop/Fullstackwebsite/frontend/src/components/fixed/Footer.js",[],"/Users/lilianetop/Desktop/Fullstackwebsite/frontend/src/components/homepage/Home.js",[],"/Users/lilianetop/Desktop/Fullstackwebsite/frontend/src/components/fixed/NavBar.js",[],"/Users/lilianetop/Desktop/Fullstackwebsite/frontend/src/components/fixed/SearchBar.js",[],["133","134"],"/Users/lilianetop/Desktop/Fullstackwebsite/frontend/src/components/portfolio/Portfolio.js",[],"/Users/lilianetop/Desktop/Fullstackwebsite/frontend/src/components/admin/Admin.js",["135","136","137"],"import \"./Admin.css\";\nimport UploadPhoto from \"./UploadPhoto\";\nimport ChangePhoto from \"./ChangePhoto\";\nimport DeletePhoto from \"./DeletePhoto\";\nimport LoginScreen from \"./LoginScreen\";\nimport Menu from \"./Menu\";\n\n\nconst Admin = () => {\n    return (\n        <div>\n            <LoginScreen />\n            <br />\n            <br />\n            {/*FIXME: Menu should be visible after login and loginscreen should be hidden*/}\n            {/*<Menu />*/}\n            <br />\n            <br />\n            <UploadPhoto />\n            {/*<ChangePhoto />*/}\n            {/*<DeletePhoto />*/}\n        </div>\n\n    )\n}\n\nexport default Admin;","/Users/lilianetop/Desktop/Fullstackwebsite/frontend/src/components/aboutEls/AboutEls.js",[],"/Users/lilianetop/Desktop/Fullstackwebsite/frontend/src/components/homepage/HomeCarousel.js",[],"/Users/lilianetop/Desktop/Fullstackwebsite/frontend/src/components/portfolio/Photo.js",[],"/Users/lilianetop/Desktop/Fullstackwebsite/frontend/src/components/aboutEls/Standpunt.js",[],"/Users/lilianetop/Desktop/Fullstackwebsite/frontend/src/components/portfolio/ThemaCarousel.js",[],"/Users/lilianetop/Desktop/Fullstackwebsite/frontend/src/components/homepage/ArtPiece.js",[],"/Users/lilianetop/Desktop/Fullstackwebsite/frontend/src/components/admin/RadioButtons.js",[],"/Users/lilianetop/Desktop/Fullstackwebsite/frontend/src/components/admin/PhotoFormType.js",[],"/Users/lilianetop/Desktop/Fullstackwebsite/frontend/src/components/admin/PhotoFormThemes.js",[],"/Users/lilianetop/Desktop/Fullstackwebsite/frontend/src/components/admin/PhotoFormColors.js",[],"/Users/lilianetop/Desktop/Fullstackwebsite/frontend/src/components/admin/PhotoFormImageURL.js",[],"/Users/lilianetop/Desktop/Fullstackwebsite/frontend/src/components/admin/PhotoFormDescription.js",[],"/Users/lilianetop/Desktop/Fullstackwebsite/frontend/src/components/homepage/List.js",[],"/Users/lilianetop/Desktop/Fullstackwebsite/frontend/src/components/admin/themeItems.js",["138"],"import React from 'react';\nconst themeItems = [\n    {\n        id: 1,\n        name: \"Landschap\",\n        checked: false\n    },\n    {\n        id: 2,\n        name: \"Stad\",\n        checked: false\n    },\n    {\n        id: 3,\n        name: \"Buiten\",\n        checked: false\n    },\n    {\n        id: 4,\n        name: \"Reizen\",\n        checked: false\n    },\n    {\n        id: 5,\n        name: \"Water\",\n        checked: false\n    },\n    {\n        id: 6,\n        name: \"Mensen\",\n        checked: false\n    },\n    {\n        id: 7,\n        name: \"Abstract\",\n        checked: false\n    },\n    {\n        id: 8,\n        name: \"Industrieel\",\n        checked: false\n    },\n    {\n        id: 9,\n        name: \"Scenes\",\n        checked: false\n    },\n\n\n\n]\n\nexport default themeItems;","/Users/lilianetop/Desktop/Fullstackwebsite/frontend/src/components/homepage/ThemePhoto.js",[],"/Users/lilianetop/Desktop/Fullstackwebsite/frontend/src/components/admin/LoginScreen.js",[],"/Users/lilianetop/Desktop/Fullstackwebsite/frontend/src/components/blog/Blog.js",["139"],"import React, {Component} from 'react';\nimport './Blog.css';\n\nexport default class Blog extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <main>\n                <h1>Laatste blogpost</h1>\n            </main>\n        )\n    }\n}","/Users/lilianetop/Desktop/Fullstackwebsite/frontend/src/components/admin/Menu.js",[],"/Users/lilianetop/Desktop/Fullstackwebsite/frontend/src/components/admin/UploadPhoto.js",["140"],"import \"./Admin.css\";\nimport React, {Component} from 'react';\nimport axios from \"axios\";\nimport themeItems from \"./themeItems\";\n// import Type from \"./PhotoFormType\";\n// import Form from 'react-bootstrap/Form';\n// import Themes from \"./PhotoFormThemes\";\n// import Colors from \"./PhotoFormColors\";\n// import ImageURL from \"./PhotoFormImageURL\";\n// import Description from \"./PhotoFormDescription\";\n\nexport default class UploadPhoto extends Component {\n    //do we need props in our constructor and where do they come from? it still works without the props\n    //TODO: how to submit the form to the DB I have installed axios but do not know how it works. It seems that the setState will create an updated Object which needs to be send via\n    // an API to the db as a POST request.\n    //TODO: how does it work if instead to upload the images itself to the DB I use the pathName of the chosen File and use a Filesystem how does that work?\n    //TODO: validation you have to choose at least a theme or a color and upload an image\n\n    constructor(props) {\n        super(props)\n        this.state = this.initialState;\n        this.onFormSubmit = this.onFormSubmit.bind(this)\n        this.renderSpecials = this.renderSpecials.bind(this)\n        this.renderColors = this.renderColors.bind(this)\n        this.renderThemes = this.renderThemes.bind(this)\n        this.changeColor = this.changeColor.bind(this)\n        this.changeTheme = this.changeTheme.bind(this)\n        this.handleChange = this.handleChange.bind(this)\n        this.changeSpecial = this.changeSpecial.bind(this)\n\n    }\n\n    initialState = {\n        'sort': \"photo\",\n        'specials': \"FOTO\",\n        'description': \"\",\n        \"themes\": [],\n        // 'themes': {\n        //     'Landschap': false,\n        //     'Stad': false,\n        //     'Buiten': false,\n        //     'Reizen': false,\n        //     'Water': false,\n        //     'Mensen': false,\n        //     'Abstract': false,\n        //     'Industrieel': false,\n        //     'Scenes': false\n        // },\n        'colors': [],\n        // 'colors': {\n        //     'Blauw': false,\n        //     'Geel': false,\n        //     'Groen': false,\n        //     'Rood': false,\n        //     'Oranje': false,\n        //     'Paars': false,\n        //     'Kleurrijk': false\n        // },\n        'selectedFile': \"\",\n    }\n\n\n    //FIXME: how to show alert message with chosen themes and colors?\n//FIXME: creates code status 500 and after changing the controller back to code 400\n//     onFormSubmit(event){\n//         event.preventDefault();\n//\n//         let bodyFormData = new FormData();\n//         bodyFormData.append(\"sort\", this.state.sort)\n//         bodyFormData.append(\"specials\", \"this.state.specials\")\n//         bodyFormData.append(\"description\", \"this.state.description\")\n//         bodyFormData.append(\"themes\", JSON.stringify(this.state.themes))\n//         bodyFormData.append(\"colors\", JSON.stringify(this.state.colors))\n//         bodyFormData.append(\"selectedFile\", \"this.state.selectedFile\" )\n//\n//         console.log(\"Type kunstwerk: \" + this.state.sort + \" \" +\n//         \"\\nAdaptatie: \" + this.state.specials +\n//         \"\\nBeschrijving: \" + this.state.description +\n//         \"\\nGekozen bestand: \" + this.state.selectedFile)\n//         console.log(\"gekozen kleuren\", this.state.colors)\n//         console.log(\"gekozen thema's\", this.state.themes)//this works\n//\n//\n//         axios({\n//             method: \"post\",\n//             url: \"http://localhost:8080/api/addArtpiece\",\n//             data: bodyFormData,\n//             headers: { \"Content-Type\": \"multipart/form-data\" },\n//         }).then(response => {\n//             console.log(response.data)\n//             if(response.data != null)\n//                 this.setState(this.initialState)\n//             alert(\"Kunstwerk opgeslagen\")\n//         }).catch(error => {\n//             console.log(\"Something went wrong \" + error);\n//             alert(\"Something went wrong \" + error);\n//         });\n//     }\n//FIXME: creates a code status 400\n    onFormSubmit = e => {\n\n        e.preventDefault(); //this creates error code 400 otherwise nothing happens\n        console.log(\"gekozen kleuren\", this.state.colors)//this works\n        console.log(\"gekozen thema's\", this.state.themes)//this works\n        alert('Artpiece was submitted with description: ' + this.state.description\n                + ' type of artwork is: ' + this.state.sort\n                + ' special is: ' + this.state.specials);//this works\n\n        const artpieceData = {\n            sort: this.state.sort,\n            specials: this.state.specials,\n            description: this.state.description,\n            themes: this.state.themes,\n            colors: this.state.colors,\n            selectedFile: this.state.selectedFile\n        }\n        alert(\"op te slaan kunstwerk: \" + artpieceData.sort + \" \" + artpieceData.specials\n            + \" \" + artpieceData.description\n            + \" \" + artpieceData.themes)\n//FIXME: output gives the catch error  and error code 400 but what went wrong?\n       axios.post(\"http://localhost:8080/api/addArtpiece\", artpieceData)\n           .then(response => {\n               console.log(response.data)\n                   if(response.data != null)\n               this.setState(this.initialState)\n               alert(\"Kunstwerk opgeslagen\")\n           }).catch(error => {\n               alert(\"Something went wrong\" + error);\n       });\n    }\n\n\n\n    changeTheme(event){\n        let tempThemes = this.state.themes;\n        const theme = {id: event.target.id, name: event.target.value, status: event.target.checked}\n\n        if(!event.target.checked){\n            const index = tempThemes.findIndex((item)=>item.name === theme.name)\n            tempThemes.splice(index, 1);\n        } else {\n            tempThemes.push(theme);\n        }\n\n        this.setState({\n            themes : tempThemes\n        })\n    }\n\n//FIXME: duplicate code refactor those two methods into 1\n//     changeTheme(event){\n//         const val = event.target.checked;\n//         const name = event.target.name;\n//         let updatedThemes = Object.assign({}, this.state.themes, {[name]: val})\n//         this.setState({\n//             'themes': updatedThemes\n//         })\n//     }\n//     changeColor(event){\n//         const val = event.target.checked;\n//         const name = event.target.name;\n//         let updatedColors = Object.assign({}, this.state.colors, {[name]: val})\n//         this.setState({\n//             'colors': updatedColors\n//         })\n//     }\n\n    changeColor(event){\n        let tempColors = this.state.colors;\n        const color = {id: event.target.id, name: event.target.value, status: event.target.checked}\n        //FIXME: is line 172 the same as line 170?\n        // const color = {id : target.id, name: target.value, status: target.checked} = event; or\n        //const {id: id, name: value, status: checked} = event.target; //does this work? TODO: try out refactor code below\n        if(!event.target.checked){\n            const index = tempColors.findIndex((item)=>item.name === color.name)\n            tempColors.splice(index, 1);\n        } else {\n            tempColors.push(color);\n        }\n        this.setState({\n            colors : tempColors\n        })\n    }\n\n\n    handleChange(event){\n        const {name, value} = event.target\n        this.setState({[name]: value})\n        //this.setState({[event.target.name] : event.target.value})\n    }\n\n    changeSpecial(event){\n        //FIXME: name is always sort so can we remove line 191 and change name to sort on line 192?\n        const {name, value } = event.target\n        if(name === 'sort' && value === 'photo') {\n            this.setState({[name]: value, specials: 'FOTO'})\n        } else {\n            this.setState({\n                sort: 'special',\n            specials: value})\n        }\n    }\n\n    render() {\n        return (\n            <main >\n                <div  className=\"koptekst\">\n                <h1>Het uploaden van een foto</h1>\n                </div>\n                <form  className=\"formulier\" onSubmit={this.onFormSubmit}>\n                <h3 >Kies het type kunstwerk: </h3>\n                <label key='foto'>Foto</label>\n                    <input\n                        type=\"radio\"\n                        name=\"sort\"\n                        value=\"photo\"\n                        checked={this.state.sort === \"photo\"}\n                        onChange={this.changeSpecial}\n                        />\n                <label key='special'>Special</label>\n                    <input\n                        type=\"radio\"\n                        name=\"sort\"\n                        value=\"special\"\n                        checked={this.state.sort === \"special\"}\n                        onChange={this.changeSpecial}\n                    />\n                {this.state.sort === 'special' ? this.renderSpecials() : \"\"}\n                <hr />\n                <br />\n                <h3>De ingegeven tekst is zichtbaar als ondertiteling bij de foto.</h3>\n                <textarea className='beschrijvingsveld'\n                          key='beschrijving'\n                           value={this.state.description}\n                           name='description'\n                           placeholder=\"Geef titel of beschrijf het werk\"\n                           onChange={this.handleChange}\n                />\n                <br />\n                <hr />\n                <br />\n                <h3 >Kies de thema's:</h3>\n                {this.renderThemes()}\n                <hr />\n                <br />\n                <h3 >Kies de kleuren:</h3>\n                { this.renderColors() }\n                <hr />\n                <br />\n                <h3 >Kies de foto die je wilt uploaden.</h3>\n                    <div  key='bestand' className=\"custom-file\" style={{width: 250}}>\n                        <input\n                            type=\"file\"\n                            className=\"custom-file-input\"\n                            id=\"customFileLangHTML\"\n                            name='selectedFile'\n                            onChange={this.handleChange}\n                            value={this.state.selectedFile}\n                        />\n                        <label className=\"custom-file-label \" htmlFor=\"customFileLangHTML\"\n                                   data-browse=\"Bestand kiezen\">Voeg je foto toe</label>\n                    </div>\n\n                <hr />\n                <button className='knop' type='submit'>Uploaden</button>\n            </form>\n\n            </main>\n        )\n    };\n\n    renderSpecials() {\n        const specials = ['Camera & Kwast', 'Boxbeeld', 'Geënsceneerd']\n        return specials.map((special, i) =>{\n            return  (\n                <div key={i} className=\"form-check-inline\">\n                <label > {special} </label>\n                <input\n                    type='radio'\n                    name='specials'\n                    onChange={this.changeSpecial}\n                    checked={this.state.specials[special]}\n                    value={special}\n                />\n            </div>\n            )\n        })\n    }\n\n    renderThemes() {\n        const themes = ['Landschap', 'Stad', 'Buiten', 'Reizen', 'Water', 'Mensen', 'Abstract', 'Industrieel', 'Scenes'];\n\n        return themes.map((theme, i) => {\n            return (\n                <div key={i} className=\"form-check-inline\">\n                    <label > {theme} </label>\n                    <input\n                        type='checkbox'\n                        name=\"theme\"\n                        onChange={this.changeTheme}\n                        checked={this.state.themes[theme]}\n                        value={theme}/>\n                </div>\n            )\n        })\n    }\n\n\n    renderColors() {\n        const colors = ['Blauw', 'Geel', 'Groen', 'Rood', 'Oranje', 'Paars', 'Kleurrijk'];\n        return colors.map((color, i) => {\n            return (\n                <div key={i} className=\"form-check-inline\">\n                <label >\n                    {color}</label>\n                    <input\n                        type=\"checkbox\"\n                        name='color'\n                        onChange={this.changeColor}\n                        checked={this.state.colors[color]}\n                        value={color}\n\n                    />\n                </div>\n            )\n        })\n    }\n}\n","/Users/lilianetop/Desktop/Fullstackwebsite/frontend/src/components/admin/DeletePhoto.js",["141"],"import React, {Component} from \"react\";\nimport \"./Admin.css\";\n\nexport default class DeletePhoto extends Component {\n    constructor(props) {\n        super(props);\n\n    }\n\n    render(){\n        return(\n            <main>\n\n            </main>\n        )\n    }\n\n}","/Users/lilianetop/Desktop/Fullstackwebsite/frontend/src/components/admin/ChangePhoto.js",["142"],"import React, {Component} from \"react\";\nimport \"./Admin.css\";\n\nexport default class ChangePhoto extends Component {\n    constructor(props) {\n        super(props);\n\n    }\n\n    render(){\n        return(\n            <main>\n\n            </main>\n        )\n    }\n\n}",{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","replacedBy":"146"},{"ruleId":"143","replacedBy":"147"},{"ruleId":"145","replacedBy":"148"},{"ruleId":"149","severity":1,"message":"150","line":3,"column":8,"nodeType":"151","messageId":"152","endLine":3,"endColumn":19},{"ruleId":"149","severity":1,"message":"153","line":4,"column":8,"nodeType":"151","messageId":"152","endLine":4,"endColumn":19},{"ruleId":"149","severity":1,"message":"154","line":6,"column":8,"nodeType":"151","messageId":"152","endLine":6,"endColumn":12},{"ruleId":"149","severity":1,"message":"155","line":1,"column":8,"nodeType":"151","messageId":"152","endLine":1,"endColumn":13},{"ruleId":"156","severity":1,"message":"157","line":5,"column":5,"nodeType":"158","messageId":"159","endLine":7,"endColumn":6},{"ruleId":"149","severity":1,"message":"160","line":4,"column":8,"nodeType":"151","messageId":"152","endLine":4,"endColumn":18},{"ruleId":"156","severity":1,"message":"157","line":5,"column":5,"nodeType":"158","messageId":"159","endLine":8,"endColumn":6},{"ruleId":"156","severity":1,"message":"157","line":5,"column":5,"nodeType":"158","messageId":"159","endLine":8,"endColumn":6},"no-native-reassign",["161"],"no-negated-in-lhs",["162"],["161"],["162"],"no-unused-vars","'ChangePhoto' is defined but never used.","Identifier","unusedVar","'DeletePhoto' is defined but never used.","'Menu' is defined but never used.","'React' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'themeItems' is defined but never used.","no-global-assign","no-unsafe-negation"]